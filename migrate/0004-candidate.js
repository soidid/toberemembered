// Generated by LiveScript 1.2.0
var fs;
fs = require('fs');
fs.readFile('secret', function(error, secret){
  var x$, firebase, ref$, keys, unique;
  if (error) {
    throw error;
  }
  secret = secret.toString('utf-8').replace(/\n.*/, '');
  x$ = firebase = new (require('firebase'))('https://askkkkk.firebaseio.com/');
  x$.auth(secret, function(error){
    if (error) {
      throw error;
    }
  });
  ref$ = require('prelude-ls'), keys = ref$.keys, unique = ref$.unique;
  return firebase.child("candidates").once('value', function(snapshot){
    var cid, ref$, c;
    for (cid in ref$ = snapshot.val()) {
      c = ref$[cid];
      firebase.child("candidates/" + cid + "/addressed_count").set(0);
      firebase.child("candidates/" + cid + "/replied_count").set(0);
    }
    return firebase.child("questions").on('child_added', function(snapshot){
      var i$, ref$, len$, id, res, responser, results$ = [];
      if (!(snapshot.val().state && snapshot.val().state.passed)) {
        return;
      }
      for (i$ = 0, len$ = (ref$ = keys(snapshot.val().addressing)).length; i$ < len$; ++i$) {
        id = ref$[i$];
        firebase.child("candidates/" + id + "/addressed_count").transaction(fn$);
      }
      if (!(snapshot.val().responses_count > 0)) {
        return;
      }
      for (i$ = 0, len$ = (ref$ = unique((fn1$()))).length; i$ < len$; ++i$) {
        responser = ref$[i$];
        results$.push(firebase.child("candidates/" + responser + "/replied_count").transaction(fn2$));
      }
      return results$;
      function fn$(it){
        return it + 1;
      }
      function fn1$(){
        var ref$, results$ = [];
        for (id in ref$ = snapshot.val().responses) {
          res = ref$[id];
          results$.push(res.responser);
        }
        return results$;
      }
      function fn2$(it){
        return it + 1;
      }
    });
  });
});